-- This SQL script creates the database schema for the LHC (Lecture Hall Booking System)
CREATE TABLE LOGIN (
    L_ID INT PRIMARY KEY AUTO_INCREMENT,
    L_PASSWORD VARCHAR(255) NOT NULL,
    L_USERNAME VARCHAR(50) UNIQUE NOT NULL
);

CREATE TABLE ADMINS (
    A_ID INT PRIMARY KEY,
    A_NAME VARCHAR(100) NOT NULL,
    A_MOBILE VARCHAR(20),
    A_EMAIL VARCHAR(100) UNIQUE
);

CREATE TABLE USERS (
    U_ID INT PRIMARY KEY AUTO_INCREMENT,
    U_NAME VARCHAR(100) NOT NULL,
    U_MAIL VARCHAR(100) UNIQUE NOT NULL,
    U_TYPE ENUM('STUDENT', 'STAFF', 'FACULTY') NOT NULL,
    -- U_ROLE field has been removed
    U_DEBT DECIMAL(10, 2) DEFAULT 0
);

CREATE TABLE HALLS (
    H_CODE VARCHAR(20) PRIMARY KEY,
    H_CAPACITY INT NOT NULL,
    H_PROJECTORS INT DEFAULT 0,
    H_BBOARDS INT DEFAULT 0,
    H_WBOARDS INT DEFAULT 0,
    H_EDUPAD ENUM('YES', 'NO') DEFAULT 'NO'
);

CREATE TABLE EVENTS (
    E_ID INT PRIMARY KEY AUTO_INCREMENT,
    E_TYPE VARCHAR(50) NOT NULL,
    E_HALL VARCHAR(20) NOT NULL,
    E_STATUS ENUM('CONFIRMED', 'PENDING', 'CANCELLED') DEFAULT 'PENDING',
    E_DATE_START DATE NOT NULL,
    E_DATE_END DATE NOT NULL,
    FOREIGN KEY (E_HALL) REFERENCES HALLS(H_CODE)
);

CREATE TABLE EVENT_TIME (
    ET_ID INT PRIMARY KEY AUTO_INCREMENT,
    E_ID INT NOT NULL ,
    ET_DAY DATE NOT NULL,
    ET_DAY_OF_WEEK VARCHAR(10) GENERATED ALWAYS AS (DAYNAME(ET_DAY)) STORED,
    ET_START TIME NOT NULL,
    ET_END TIME NOT NULL,
    FOREIGN KEY (E_ID) REFERENCES EVENTS(E_ID)
);

CREATE TABLE LOGIN_ADMIN (
    L_ID INT NOT NULL,
    A_ID INT NOT NULL,
    PRIMARY KEY (L_ID, A_ID),
    FOREIGN KEY (L_ID) REFERENCES LOGIN(L_ID),
    FOREIGN KEY (A_ID) REFERENCES ADMINS(A_ID)
);

CREATE TABLE LOGIN_USER (
    L_ID INT NOT NULL,
    U_ID INT NOT NULL,
    PRIMARY KEY (L_ID, U_ID),
    FOREIGN KEY (L_ID) REFERENCES LOGIN(L_ID),
    FOREIGN KEY (U_ID) REFERENCES USERS(U_ID)
);

CREATE TABLE ADMIN_USER (
    A_ID INT NOT NULL,
    U_ID INT NOT NULL,
    PRIMARY KEY (A_ID, U_ID),
    FOREIGN KEY (A_ID) REFERENCES ADMINS(A_ID),
    FOREIGN KEY (U_ID) REFERENCES USERS(U_ID)
);

CREATE TABLE USER_EVENT (
    U_ID INT NOT NULL,
    E_ID INT NOT NULL,
    PRIMARY KEY (U_ID, E_ID),
    FOREIGN KEY (U_ID) REFERENCES USERS(U_ID),
    FOREIGN KEY (E_ID) REFERENCES EVENTS(E_ID)
);

CREATE TABLE ADMIN_HALL (
    A_ID INT NOT NULL,
    H_CODE VARCHAR(20) NOT NULL,
    PRIMARY KEY (A_ID, H_CODE),
    FOREIGN KEY (A_ID) REFERENCES ADMINS(A_ID),
    FOREIGN KEY (H_CODE) REFERENCES HALLS(H_CODE)
);

CREATE INDEX idx_event_status ON EVENTS(E_STATUS);
CREATE INDEX idx_event_dates ON EVENTS(E_DATE_START, E_DATE_END);
CREATE INDEX idx_user_type ON USERS(U_TYPE);
CREATE INDEX idx_hall_capacity ON HALLS(H_CAPACITY);
